server:
  port: 8080
  shutdown: graceful

spring:
  jpa:
    hibernate:
      ddl-auto: create
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres?reWriteBatchedInserts=true
    password: postgres
    username: postgres
  application:
    # Used for statistics
    name: combined
  lifecycle.timeout-per-shutdown-phase: 20s
  messages.encoding: UTF-8
  data:
    mongodb:
      authentication-database: admin
      database: test_db
      host: localhost
      port: 27017
      username: root
      password: example

  kafka:
    consumer:
      group-id: tpd-loggers
      auto-offset-reset: earliest
    # change this property if you are using your own
    # Kafka cluster or your Docker IP is different
    bootstrap-servers: localhost:9092

management:
  endpoints:
    web:
      exposure:
        include: '*'
    jmx:
      exposure:
        include: '*'
    enabled-by-default: true
  endpoint:
    auditevents.enabled: true
    beans.enabled: true
    caches.enabled: true
    conditions.enabled: true
    configprops.enabled: true
    env.enabled: true
    flyway.enabled: true
    heapdump.enabled: true
    httptrace.enabled: true
    info.enabled: true
    integrationgraph.enabled: true
    jolokia.enabled: true
    logfile.enabled: true
    loggers.enabled: true
    liquibase.enabled: true
    metrics.enabled: true
    mappings.enabled: true
    prometheus.enabled: true
    scheduledtasks.enabled: true
    sessions.enabled: true
    shutdown.enabled: false
    threaddump.enabled: true
    health:
      enabled: true
      show-details: always
      # For k8s
      probes:
        enabled: true
      diskspace:
        enabled: true
      mongo:
        enabled: true
      ping:
        enabled: true
  info:
    git.mode: full
    build:
      enabled: true
    env:
      enabled: true
    defaults:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
      # TODO: Understand what region means
      region: my-region
    export:
      defaults:
        enabled: true
      prometheus:
        enabled: true
      simple:
        enabled: true

microservice:
  uri: "https://sample-microservice:2020"

logging:
  file:
    name: ${spring.application.name}