clusterZone: "{{cluster_zone}}"
agent:
  containerCap: 1000
controller:
  initializeOnce: false
  scriptApproval:
    - method java.lang.Class isAssignableFrom java.lang.Class
    - staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods inspect java.lang.Object
    - staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods println java.lang.Object java.lang.Object
    - staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods invokeMethod java.lang.Object java.lang.String java.lang.Object
  # executorMode: "EXCLUSIVE"
  disableRememberMe: false
  # numExecutors: 1
  servicePort: 80
  jenkinsUrl: https://{{jenkins.release_name}}.{{tld_hostname}}/
  javaOpts: "-Dpermissive-script-security.enabled=NO_SECURITY"
  installLatestPlugins: false
  ingress:
    tagLabel: 2.389-slim-jdk17
    enabled: true
    apiVersion: "networking.k8s.io/v1"
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: ca-issuer
    hostName: "{{jenkins.release_name}}.{{tld_hostname}}"
    tls:
      - secretName: jenkins-tls
        hosts:
          - "{{jenkins.release_name}}.{{tld_hostname}}"
  installPlugins:
    - kubernetes:3842.v7ff395ed0cf3
    - workflow-aggregator:590.v6a_d052e5a_a_b_5
    - git:4.13.0
    - configuration-as-code:1569.vb_72405b_80249
  additionalPlugins:
    - build-timeout:1.28
    - timestamper:1.21
    - ws-cleanup:0.44
    - throttle-concurrents:2.10
    - ldap:659.v8ca_b_a_fe79fa_d
    - pipeline-utility-steps:2.15.0
    - file-parameters:264.v1733d9b_2a_380
    - build-name-setter:2.2.0
    - ansicolor:1.0.2
    - job-dsl:1.81
    - script-security:1229.v4880b_b_e905a_6
    - permissive-script-security:0.7
    # - pipeline-stage-view:2.30
    # - email-ext:2.93
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "acceptFirstConnectionStrategy"
  JCasC:
    configScripts:
      security: |
        {% filter indent(width=8,blank=True) %}{% include 'files/jcasc/security.yaml' %}{% endfilter %}

      credentials: |
        {% filter indent(width=8,blank=True) %}{% include 'files/jcasc/credentials.yaml' %}{% endfilter %}

      other: |
        {% filter indent(width=8,blank=True) %}{% include 'files/jcasc/other.yaml' %}{% endfilter %}

      jobs: |
        jobs:
          - script: |
              def pipelineScript = '''\
                    {% filter replace("${","^${")|replace("\"\"\"\\","\"\"\"\\\\")|replace("\\\"","\\\\\"")|replace("\\n","\\\\n")|indent(width=20,blank=True) -%}
                    {% include 'files/actions-workflow.jenkinsfile' %}
                    {% endfilter %}
                    '''.stripMargin().stripIndent()
              
              def job = pipelineJob('Actions-Workflow')
              job.with {
                parameters {
                  stringParam('EXECUTION_ENVIRONMENT', 'kubernetes')
                  stringParam('SEED_JOB', 'true')
                }
                definition {
                  cps {
                    sandbox(true)
                    script pipelineScript
                  }
                }
              }
              queue(job)
