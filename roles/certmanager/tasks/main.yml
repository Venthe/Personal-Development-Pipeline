- kubernetes.core.helm_repository:
    name: jetstack
    repo_url: https://charts.jetstack.io
- kubernetes.core.helm:
    create_namespace: true
    update_repo_cache: true
    name: "{{ certmanager.name }}"
    chart_ref: jetstack/cert-manager
    release_namespace: "{{ certmanager.namespace }}"
    values:
      installCRDs: true
- kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: ca-issuer
        namespace: "{{ certmanager.namespace }}"
      spec:
        ca:
          secretName: ca-key-pair
- name: Create temporary build directory
  ansible.builtin.tempfile:
    state: directory
    suffix: certs
  register: tempdir
# Rewrite as Ansible
- become: true
  ansible.builtin.shell:
    chdir: "{{ tempdir.path }}"
    cmd: |
      #!/bin/bash

      set -e

      CA_PATH="/etc/kubernetes/pki"

      # Generate key for intermediate CA
      #  -aes256 to protect it with passphrase
      openssl genrsa -out "{{INTERMEDIATE_CA_FILENAME}}.key" 4096

      cat <<EOF > openssl.cnf
      [req]
      req_extensions = v3_req
      # req_extensions = v3_intermediate_ca
      # x509_extensions = v3_req
      x509_extensions = v3_intermediate_ca
      distinguished_name = req_distinguished_name
      prompt = no

      [ v3_req ]
      extendedKeyUsage = serverAuth, clientAuth, codeSigning, emailProtection
      basicConstraints = critical,CA:TRUE
      keyUsage = nonRepudiation, digitalSignature, keyEncipherment

      [req_distinguished_name]
      countryName            = PL
      stateOrProvinceName    = Mazovia
      localityName           = Pruszkow
      organizationName       = Home
      commonName             = home.arpa intermediate CA
      emailAddress           = jacek.lipiec.bc@gmail.com

      [ v3_intermediate_ca ]
      subjectKeyIdentifier = hash
      authorityKeyIdentifier = keyid:always,issuer
      basicConstraints = critical,CA:true,pathlen:0
      keyUsage = critical,digitalSignature,cRLSign, keyCertSign
      EOF

      # Generate itermediate CSR for home.arpa
      openssl req \
          -config openssl.cnf \
          -new \
          -sha256 \
          -newkey rsa:2048 \
          -nodes \
          -key "{{INTERMEDIATE_CA_FILENAME}}.key" \
          -out "{{INTERMEDIATE_CA_FILENAME}}.csr"

      # Sign request with kubernetes
      openssl x509 \
          -req \
          -in "{{INTERMEDIATE_CA_FILENAME}}.csr" \
          -CA "${CA_PATH}/ca.crt" \
          -CAkey "${CA_PATH}/ca.key" \
          -extensions v3_intermediate_ca \
          -CAcreateserial \
          -extfile openssl.cnf \
          -out "{{INTERMEDIATE_CA_FILENAME}}.crt" \
          -days 500 \
          -sha512

      cat "{{INTERMEDIATE_CA_FILENAME}}.crt" "${CA_PATH}/ca.crt" > chain.crt
      chown {{ansible_env.LOGNAME}} chain.crt "{{INTERMEDIATE_CA_FILENAME}}.key"
- ansible.builtin.shell:
    chdir: "{{ tempdir.path }}"
    cmd: |
      kubectl create secret generic \
          --namespace "{{ certmanager.namespace }}" \
          ca-key-pair \
          --from-file=tls.crt=./chain.crt \
          --from-file=tls.key={{INTERMEDIATE_CA_FILENAME}}.key
- name: Use the registered var and the file module to remove the temporary file
  ansible.builtin.file:
    path: "{{ tempdir.path }}"
    state: absent
  when: tempdir.path is defined
