- kubernetes.core.helm_repository:
    name: "{{ item.name }}"
    repo_url: "{{ item.url }}"
  with_items:
    - name: grafana
      url: https://grafana.github.io/helm-charts
    - name: loki
      url: https://grafana.github.io/loki/charts
    - name: prometheus-community
      url: https://prometheus-community.github.io/helm-charts
    - name: opensearch
      url: https://opensearch-project.github.io/helm-charts
- kubernetes.core.helm:
    name: dummy
    namespace: kube-system
    state: absent
    update_repo_cache: true
- kubernetes.core.helm:
    chart_version: "{{ item.chart_version }}"
    name: "{{ item.release_name }}"
    create_namespace: true
    chart_ref: "{{ item.repository }}"
    release_namespace: "{{ monitoring.namespace }}"
    values: "{{ lookup('template', './templates/{{ item.release_name }}.yaml') | from_yaml }}"
  with_items:
    - release_name: "grafana"
      repository: "grafana/grafana"
      chart_version: "6.50.7"
    - release_name: "loki"
      repository: "loki/loki"
      chart_version: "4.6.1"
    - release_name: "prometheus"
      repository: "prometheus-community/prometheus"
      chart_version: "19.6.1"
    - release_name: "promtail"
      repository: "loki/promtail"
      chart_version: "2.0.2"
    - release_name: "opensearch"
      repository: "opensearch/opensearch"
      chart_version: "2.10.0"
    - release_name: "opensearch-dashboards"
      repository: "opensearch/opensearch-dashboards"
      chart_version: "2.8.0"
# TODO: Handle ingress for prometheus via Helm chart
- kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: grafana
        namespace: "{{ monitoring.namespace }}"
        annotations:
          kubernetes.io/ingress.class: "nginx"
          cert-manager.io/cluster-issuer: ca-issuer
      spec:
        tls:
          - hosts:
              - "grafana.{{ tld_hostname }}"
            secretName: "grafana-tls"
        rules:
          - host: "grafana.{{ tld_hostname }}"
            http:
              paths:
                - backend:
                    service:
                      name: grafana
                      port:
                        number: 80
                  pathType: ImplementationSpecific
