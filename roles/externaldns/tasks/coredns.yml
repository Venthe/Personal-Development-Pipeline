- name: "Create namespace"
  k8s:
    state: present
    kind: Namespace
    name: "{{ externaldns.namespace }}"
    api_version: v1
- kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: etcd-client-tls
        namespace: "{{ externaldns.namespace }}"
      data:
        # CFSSL Docker image
        client.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR6RENDQXJTZ0F3SUJBZ0lVUVEyTW5vY1RCSEcxaE5NSmYzNHVXclpwSnpRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1N6RU1NQW9HQTFVRUJoTURTVTVVTVE0d0RBWURWUVFJRXdWRWRXMXRlVEVPTUF3R0ExVUVCeE1GUkhWdApiWGt4R3pBWkJnTlZCQU1URWt4dlkyRnNJR05zZFhOMFpYSWdSVlJEUkRBZUZ3MHlNakV3TURZeU1UQXhNREJhCkZ3MHpNakV3TURNeU1UQXhNREJhTUE4eERUQUxCZ05WQkFNVEJISnZiM1F3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMvRTBhSDkwNmdLWENyeUJkcmtTOHNLUlZscEJIN2JUem1kMmpMQVZIQgozYWZhNGlpTENkTkk4NnNlWDFLRElHUkdWdHdmYUVqcTNGL01ZTlRWYWlJS2VBbTA1S2ZsRmQySzNIOUk4OEUwCjRFY0RTdUJaSHFYQW5NVkFEZ2RBS0U4Yms2MHkzeDFBTE84UjNmL2krbVFXcWl3Zzg4Z3VLQ3R5aExrMU9vSnMKeS9LZjJqQlJTODVjOUt2K3V5WHNqNVFmc0hZY25CQzJpY3dacWtzTkpwQ01SZnN3QUdzeVZ5NXJwOUJHQ3IrdwpFZ1hqUktaVVZGZVdJZ05weGorQTdhVjJFbXQzMW5RVU9FMEo5a1dGOWRKVldheVFhb0huNnBSUVU5dHlLTzhlCnhGTEErMHN5Mk5LRzhabm5EUFZrUmRBenpQbGk5bzBtdkQ2bWVTK21LU290QWdNQkFBR2pnZU13Z2VBd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVgpIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlRmZXY4ZUoyQzFZUHJESm5DaVhoLzFUQXErdHpBZkJnTlZIU01FCkdEQVdnQlNVajdIbUJGOVIwSVVveDYzQ2NWS2cvNkxmckRCaEJnTlZIUkVFV2pCWWdnUmxkR05rZ2cxbGRHTmsKTFdobFlXUnNaWE56Z2dsc2IyTmhiR2h2YzNTQ01Db3VaWFJqWkMxb1pXRmtiR1Z6Y3k1cGJtWnlZWE4wY25WagpkSFZ5WlM1emRtTXVZMngxYzNSbGNpNXNiMk5oYkljRWZ3QUFBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCk9wNXgzR3JlMHFLUjNFU1FjNkpUM1BTS0JwZHptZnFhMW9YaEIwbXdCdExtb004YTI4ZFRyaVRPaXV5bXpuQ0cKdXZYSVliNS9idjlXYmVSK0JYM3d2Wk5uR1ZRd29zUEJrN25EOGFoRno4UXcrVHUzV1VOMjJidEZMYVBiWUtjQgpZNzdVRUVIMk4xTWpWRURURlhwcWNqZ1lHMGJhZFRSNEhmTzZ4L01ySmh2TXZlczFwUlB6TDltd0R3eVBuVkNlCkp5Q3plWUlyQlVJNVBhVHlEYmpaMWxudmNwSTFZRUZwQllyMjN0SUg4bkRjNHR0cWNmeE9XOSsvTURCVkJ2Z0UKdENYbHA0SHowSkxNUi8vUGFCMktleUpZVWkvWnd2TVp4RGVTUnFCcjdLekc2dzM2RnFFQVN1WlFOOUFaZHdtZgpRRDd5ZytDOExUOHIwUUFidTA4TDhBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
        ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaakNDQWs2Z0F3SUJBZ0lVZWY5NjRVYzB1QzA5YVJkdmROaHRhUTVtVlhzd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1N6RU1NQW9HQTFVRUJoTURTVTVVTVE0d0RBWURWUVFJRXdWRWRXMXRlVEVPTUF3R0ExVUVCeE1GUkhWdApiWGt4R3pBWkJnTlZCQU1URWt4dlkyRnNJR05zZFhOMFpYSWdSVlJEUkRBZUZ3MHlNakV3TURZeU1UQXhNREJhCkZ3MHlOekV3TURVeU1UQXhNREJhTUVzeEREQUtCZ05WQkFZVEEwbE9WREVPTUF3R0ExVUVDQk1GUkhWdGJYa3gKRGpBTUJnTlZCQWNUQlVSMWJXMTVNUnN3R1FZRFZRUURFeEpNYjJOaGJDQmpiSFZ6ZEdWeUlFVlVRMFF3Z2dFaQpNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNyUjJ3VGZRYnZqaTY3ejVrQ1c0MkkrK2F2CllaZFlueEg4TGlxeFQ1cDVZZWl5ekUyTEdYNGhtT2kzaXBFenBsQ1IwTHN3T0VQYWtqWW5BR3VpclBrYzc2VW8KUkh1TEMydXZzV21MR2Y2OVlTVEZOUjhSTllJY09xZ3Nrb3ZyVkNpL3NiRTNlRDhVNEhHUGtLSTRBWjFsZXJMcwpkZmMxUWttMkY2NzkrQkhQSlR6V0dSR0FGaEtPR05ROHNlNVhPdXZTamJoZms5ZlY3U1ZmUFkwTlpvbzRXWlZhCjZodUI0MmNPbEV4S3dGdG8wbCtzWTJNWU55K3hMU29ydUwxazJUenA0RnM5SmZhRHVvdU81K2I3MS9wdmVqSWoKZ2s0RFJDU0hBU2xjNDdER1pGQTMxSTNZZkw3ajJXUlRNQTV0aEhDK1lCK1FGMnBFd25QVHFicUtpTHdQQWdNQgpBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lCQmpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCU1VqN0htQkY5UjBJVW94NjNDY1ZLZy82TGZyREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBQnQ2bEdtcUEKaEZFYk5Eb2hoLzgyeWl2eVpkWmFadTlTVEJxUzA1SVBnd3FXWlBWeml0SHd2TXoxNXpSeHpCaUxDaDhrMUU1WQo1ZkNkSVZrcTVhVEhVYzNrWTlOaDFEV1gyTEoyNGl6MHY5NjYwUDRwSkxGbHdpbStuRnJvd1IrQUNxZkZGVTNPCnBOV045ZlpKNGMwcDdseE84L1psSUpGaDlOdi9pVDhvMTcxa3VMQ0JQL0FZRklTTnNmd1pNYjVIczNhVGtCR0IKaVNKWDVhZG1kVWEzWGdRZzVXV1MxUVd6L0hiTUx5VFp3VVR6bDhnRU9GSE5SNHpnajRLZ0hxblVFc3d1V2NDRQowcGczeEZxRGtRdklqZDFMdTV5MGQ5NEhtcWZhcjdZbktJVXVXQ2tiNHN4dnF5VHBBb0tYdW5hdjV1TW42VElOClpEbnozamJiL1o0aWlRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
        client-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBdnhOR2gvZE9vQ2x3cThnWGE1RXZMQ2tWWmFRUisyMDg1bmRveXdGUndkMm4ydUlvCml3blRTUE9ySGw5U2d5QmtSbGJjSDJoSTZ0eGZ6R0RVMVdvaUNuZ0p0T1NuNVJYZGl0eC9TUFBCTk9CSEEwcmcKV1I2bHdKekZRQTRIUUNoUEc1T3RNdDhkUUN6dkVkMy80dnBrRnFvc0lQUElMaWdyY29TNU5UcUNiTXZ5bjlvdwpVVXZPWFBTci9yc2w3SStVSDdCMkhKd1F0b25NR2FwTERTYVFqRVg3TUFCck1sY3VhNmZRUmdxL3NCSUY0MFNtClZGUlhsaUlEYWNZL2dPMmxkaEpyZDlaMEZEaE5DZlpGaGZYU1ZWbXNrR3FCNStxVVVGUGJjaWp2SHNSU3dQdEwKTXRqU2h2R1o1d3oxWkVYUU04ejVZdmFOSnJ3K3Bua3ZwaWtxTFFJREFRQUJBb0lCQVFDSytNZ0p5RE9saGI1dgpFbjhHTzNobDFCTzk4MUVvMzFDMkJ3OXU1eXpCcGllWnFYZjNlRlAxOFZQNktUWm9MTDBCODlieCtQVmY3Snk0Cmw0ejFFOVppYXVBVWMySXgybTlodWZIUjY0Z1FuemJIREVTVVRSZ2RPV2kxcC81YUNYZFFCVjZwYTJGbzljV0QKNTBWZm51SUJJaEFxZjJTUFBhUXNES0J3T0hmNERETUx0OEEweXVDRVFvNis4a0xCM2tLczErTk1aMENDbEg3ZQpMVktscjBhUWFKdlA2WTFMaTlrdmp5bUdiWEFOZy9XRzRHRTRoeklINDhTR3BZd0doeVBBUVgwaWx2SmxPL3J5Cnd3Zm92RnZmQTRaN1ZVN2o5UnlxK0FEaytnYXJPckdXSzRHdFV2bnV4K2VOcW40ZkJrdjFoSjZ3Y2VNSGFvaG0KTHA1VENaL0JBb0dCQU1vcFBkUDRLQmR4YXl6SDJxRTZGeTFqTWVPYzUzTHJ4blhhb0VZdCtzRkxHYzQ1R3ltdwprOFpHbU16S1NUaE5mYmd4UzhyRGpwVDdSU0RhVjZHYWpDTzVuNzJPaUwzOUhUVVFMblV3dk5URE8wZ2Fpd3hBCm5aSTBKNFZtQlBLaHNoSDFGUFBkOXAyZ0JzWDUxZXQrRTY3THJ2NkJiQ3ZCcmtiaU5XWEJXL1NaQW9HQkFQSDIKUEdXN3QrVmUzS0ZKN1VmZUsvRG9hYnV3eW5MaGlrZ1FZSjlocXo2TVNxdFlWWktEUUE2VFNQMXFyc1dTbldWWAo0bWhaS1hnOGdDbTFpczh6M1BlUDE4MWZYS2gxWEJRRTFXTW9rYk5YRzlFenJMb0ppcTZiSEk3SFBYL0FxT0FoClFZRVp0MmYzemIwQnV4ZzkxKzM2VTNpYWZtZ1hJNFFlN1hVTW1VcTFBb0dCQUpmajFLaG1VdmtLSmxSRzlHVWUKbUR0cHhCb1gwVzN1NS9XMGhhYzA5S28yR3ZWdXdwSFlNYTlQYTQ2eWpjRFh1QldrTkNYc09EeUhiYkQ1VzgzMwpxRU5QUEUzWHdiVzlieXhuTkFDbzFiZWwxK3ljeE13MzRDdnhNNkJ1dmxqdVZEUlp4NXhTc1BCTlE4bUxwTWFDCnU1Y2hRaUhHYTllVWRiU2NVVEphelJSQkFvR0JBTTZxbkZIa3NhRUhrbmxzOUcvak16TDB3SUxnOFRxSXJCejcKYUJ3YVJ6TUlqeXFsSzRvVjh4dS83Nk1NZ1RVZUVyUWlDYTlKSU9PakFYRWVyKzVsQlFLcTZROXd1V3JsdXYwYQpWOHozTk9PeXJuN1VuVjdWa1krcnl3dWs0RUdESkhzenpJaGhsOGNFNE1Ua2VwS3RHQWNiUGpxUDh4SWpXV0diCkxRVkIrcGpWQW9HQkFMa0Z4SFFGbmhKSXBGMXNIZFNVeFNpT2RMcWRvUmdoQnNvRUV6Tlp5Mm1hZk9kTzBLbXoKaVNxTEREdDQ4NnN5Qzh5TXlwcDJZTkdUTmZqSDUrZ1cwTEs5czRGNHc2eEl4ZWxtWE01RmVST1FDQ2NVT29ycgpnbTBkaGxrMGZGcXZZdG5oU0VYMXdwUFd2Q2RLdTJGQ0RWQVZXOFVzdk43K3VjUVQrQWxZMFVCVQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
- kubernetes.core.helm_repository:
    name: "{{ item.name }}"
    repo_url: "{{ item.repo }}"
  with_items:
    - name: bitnami
      repo: https://charts.bitnami.com/bitnami
    - name: coredns
      repo: https://coredns.github.io/helm
- kubernetes.core.helm:
    name: dummy
    namespace: kube-system
    state: absent
    update_repo_cache: true
- kubernetes.core.helm:
    name: "{{ item.name }}"
    create_namespace: true
    chart_ref: "{{ item.chart }}"
    release_namespace: "{{ externaldns.namespace }}"
    values: "{{ lookup('template', './external-dns-' + item.value + '.yml') | from_yaml }}"
  with_items:
    - value: coredns
      chart: coredns/coredns
      name: coredns
    - value: external-dns
      chart: bitnami/external-dns
      name: external-dns
    - value: etcd
      chart: bitnami/etcd
      name: etcd
- kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        namespace: "{{ externaldns.namespace }}"
        name: external-dns-public
        annotations:
          kubernetes.io/ingress.class: nginx
      spec:
        type: LoadBalancer
        ports:
          - port: 53
            targetPort: 53
            protocol: UDP
            name: udp
        selector:
          app.kubernetes.io/name: coredns
# Rewrite as Ansible
- ansible.builtin.shell: |
    #!/bin/bash
    mkdir /tmp/coredns
    kubectl get \
        --namespace=kube-system \
        --output=jsonpath='{.data.Corefile}' \
        configmap/coredns  \
        > /tmp/coredns/Corefile
    echo "{{ tld_hostname }}:53 {
        errors
        cache 30
        forward . $(kubectl get service \
          --namespace="{{ externaldns.namespace }}" \
          --output=jsonpath='{.status.loadBalancer.ingress[0].ip}' \
          external-dns-public)
    }" >> /tmp/coredns/Corefile
    kubectl patch \
        --namespace=kube-system \
        configmap/coredns \
        --patch="{\"data\":{\"Corefile\":\"$(cat /tmp/coredns/Corefile | awk -v ORS='\\n' '1')\"}}"
    rm -rf /tmp/coredns
