clusterZone: "{{cluster_zone}}"
controller:
  ingress:
    enabled: true
    paths: []
    apiVersion: "networking.k8s.io/v1"
    labels: {}
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: ca-issuer
    hostName: "{{jenkins.release_name}}.{{tld_hostname}}"
    tls:
      - secretName: jenkins-tls
        hosts:
          - "{{jenkins.release_name}}.{{tld_hostname}}"
  additionalPlugins:
    #- docker-plugin:1.2.9
    - pipeline-utility-steps:2.13.0
    - blueocean:1.25.8
    - cloudbees-folder:6.729.v2b_9d1a_74d673
    - antisamy-markup-formatter:2.7
    - build-timeout:1.24
    - credentials-binding:523.vd859a_4b_122e6
    - timestamper:1.20
    - ws-cleanup:0.43
    - throttle-concurrents:2.9
    #- workflow-aggregator:581.v0c46fa_697ffd
    - pipeline-stage-view:2.24
    #- git:4.11.5
    - ssh-slaves:1.821.vd834f8a_c390e
    - email-ext:2.91
    - mailer:438.v02c7f0a_12fa_4
    #- docker-workflow:1.28
    # - configuration-as-code:1429.v09b_044a_c93de
    - ldap:2.12
    - gerrit-trigger:2.36.0
  prometheus.enabled: true
  servicePort: 80
  jenkinsUrl: https://{{jenkins.release_name}}.{{tld_hostname}}/
  initializeOnce: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "acceptFirstConnectionStrategy"
  JCasC:
    configScripts:
      security: |
        {% filter indent(width=8,blank=True) %}{% include 'jenkins/security.yaml.j2' %}{% endfilter %}

      credentials: |
        {% filter indent(width=8,blank=True) %}{% include 'jenkins/credentials.yaml.j2' %}{% endfilter %}

# lifecycle:
#   postStart:
#     exec:
#       command:
#       - /bin/sh
#       - -c
#       - |
#         openssl s_client -connect docker.home.arpa:443  < /dev/null | openssl x509 -outform PEM > /tmp/cert.pem;
#         keytool -importcert -cacerts -storepass changeit -file /tmp/cert.pem
