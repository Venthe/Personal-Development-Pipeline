csiDriver:
  # should be globally unique for a given cluster
  name: "org.democratic-csi.zfs-local-dataset"
  storageCapacity: true
  fsGroupPolicy: File

# add note here about volume expansion requirements
storageClasses:
- name: zfs-local-dataset
  defaultClass: true
  reclaimPolicy: Delete
  volumeBindingMode: WaitForFirstConsumer
  # distributed support is not yet ready
  allowVolumeExpansion: false
  parameters:
    fsType: zfs
  mountOptions: []
  secrets:
    provisioner-secret:
    controller-publish-secret:
    node-stage-secret:
    node-publish-secret:
    controller-expand-secret:

  # if your cluster supports snapshots you may enable below
  volumeSnapshotClasses: []
  #- name: zfs-local-dataset
  #  secrets:
  #    snapshotter-secret:

controller:
  enabled: true
  strategy: node
  externalProvisioner:
    extraArgs:
    - --leader-election=false
    - --node-deployment=true
    - --node-deployment-immediate-binding=false
    - --feature-gates=Topology=true
    - --strict-topology=true
    - --enable-capacity=true
    - --capacity-ownerref-level=1

  # distributed support is not yet ready
  externalResizer:
    enabled: false
  # distributed support is not yet ready
  externalSnapshotter:
    enabled: true
    extraArgs:
    - --leader-election=false
    - --node-deployment=true

driver:
  config:
    driver: zfs-local-dataset
    # csi:
    #   access_modes:
    #   - UNKNOWN
    #   - SINGLE_NODE_WRITER
    #   - SINGLE_NODE_SINGLE_WRITER
    #   - SINGLE_NODE_MULTI_WRITER
    #   - SINGLE_NODE_READER_ONLY
    #   - MULTI_NODE_READER_ONLY
    #   - MULTI_NODE_SINGLE_WRITER
    #   - MULTI_NODE_MULTI_WRITER
    zfs:
      datasetParentName: main/k8s/zfs-local/volumes
      detachedSnapshotsDatasetParentName: main/k8s/zfs-local/snapshots
      datasetProperties:
        # key: value
      datasetEnableQuotas: true
      datasetEnableReservation: false