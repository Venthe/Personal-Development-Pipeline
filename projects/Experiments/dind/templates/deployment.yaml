apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "docker.fullname" . }}
  labels:
    {{- include "docker.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "docker.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "docker.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: certificate-bundle
          emptyDir: {}
        - name: cacrt
          secret:
            items:
              - key: ca.crt
                path: kubernetes-ca.crt
            secretName: jenkins-tls
        - name: containerd-sock
          hostPath:
            path: "/var/run/containerd/containerd.sock"
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      initContainers:
        - name: update-ca-certs
          image: kalaksi/ca-certificates:1.2
          volumeMounts:
            - name: certificate-bundle
              mountPath: /etc/ssl/certs
            - name: cacrt
              mountPath: "/additional_certs"
              readOnly: true
      containers:
        - name: docker-shim
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: docker.io/library/docker:23.0.0-dind
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: certificate-bundle
              mountPath: "/etc/ssl/certs"
              readOnly: true
            - mountPath: "/var/run/containerd/containerd.sock"
              name: containerd-sock
              # readOnly: true
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          # command: ["tail", "-f"]
          # dockerd --containerd=/run/containerd/containerd.sock -H tcp://0.0.0.0 --tls=false
          command: ["sh", "-c"]
          args:
            - dockerd --containerd=/run/containerd/containerd.sock -H tcp://0.0.0.0 --tls=false
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
