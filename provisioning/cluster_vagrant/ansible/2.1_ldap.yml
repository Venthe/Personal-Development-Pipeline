---
- name: Deploy LDAP
  gather_facts: false
  hosts: all
  vars:
    LDAP_BASE_DN: "{{'{{ LDAP_BASE_DN }}'}}"
    LDAP_DOMAIN: "{{'{{ LDAP_DOMAIN }}'}}"

  vars_prompt:
    - name: namespace
      prompt: Namespace for LDAP
      default: ldap
      private: no
    - name: should_clear
      prompt: Clear before installing
      default: no
      private: no
    - name: admin_password
      default: "secret"
      prompt: Admin password
    - name: ldap_domain
      default: "example.org"
      prompt: LDAP domain
      private: no
    - name: ldap_organisation
      default: "My Company"
      private: no
      prompt: LDAP organisation
  tasks:
    - name: Delete old releases
      command: "helm uninstall --namespace {{ namespace }} {{ item }}"
      with_items:
        - phpldapadmin
        - openldap
      when: "should_clear|bool"
    - name: Create a directory if it does not exist
      become: true
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - /tmp/ldap/openldap
        - /tmp/ldap/phpldapadmin
    - name: Template LDIF
      become: true
      template:
        src: "./2.1_ldap/openldap/{{item}}.ldif.j2"
        dest: "/tmp/ldap/openldap/{{item}}.ldif"
        owner: vagrant
        mode: '0777'
      with_items:
        - groups 
        - people
    - name: Register people file
      command: cat /tmp/ldap/openldap/people.ldif
      register: ldap_users
    - name: Register group file
      command: cat /tmp/ldap/openldap/groups.ldif
      register: ldap_groups
    - set_fact:
        ldap_groups: "{{ldap_groups.stdout}}"
    - set_fact:
        ldap_users: "{{ldap_users.stdout}}"
    - name: Template files
      become: true
      template:
        src: "./2.1_ldap/{{ item.directory }}/values.yml.j2"
        dest: "/tmp/ldap/{{ item.directory }}/values.yml"
        owner: vagrant
        mode: '0777'
      with_items:
        - directory: openldap
        - directory: phpldapadmin
    - name: Add helm repository
      command: "helm repo add {{ item.name }} {{ item.url }}"
      with_items:
        - name: stable
          url: https://charts.helm.sh/stable
        - name: cetic
          url: https://cetic.github.io/helm-charts
      notify: "Update helm repository"
    - name: Deploy helm charts
      shell:
        cmd: |
          helm upgrade \
            {{ item.release_name }} \
            {{ item.chart }} \
            --install \
            --namespace={{ namespace }} \
            --create-namespace \
            --values={{ item.value }}
      with_items:
        - release_name: phpldapadmin
          chart: cetic/phpldapadmin
          value: "/tmp/ldap/phpldapadmin/values.yml"
        - release_name: openldap
          chart: stable/openldap
          value: "/tmp/ldap/openldap/values.yml"
    - name: Apply ingress
      shell:
        cmd: |
          cat <<EOF | kubectl apply -f -
          apiVersion: networking.k8s.io/v1beta1
          kind: Ingress
          metadata:
            name: phpldapadmin-ingress
            namespace: {{namespace}}
            annotations:
              kubernetes.io/ingress.class: "nginx"
          spec:
            rules:
            - host: ldap-admin.{{ldap_domain}}
              http:
                paths:
                - backend:
                    serviceName: phpldapadmin
                    servicePort: 80
          EOF
  handlers:
    - name: Update helm repository
      include_tasks: _update_helm_repositories.yml
