pipeline {
       agent {
           kubernetes {
               defaultContainer 'jnlp'
               yaml '''\
               apiVersion: v1
               kind: Pod
               spec:
                 volumes:
                   - name: certificates
                     configMap:
                       name: ca-certificates.crt
                 serviceAccount: jenkins-kubectl
                 containers:
                   - name: kubectl
                     image: bitnami/kubectl 
                     stdin: true 
                     tty: true
                     command:
                       - '/bin/bash'
                       - '-c'
                       - '--'
                     args:
                       - 'sleep infinity'
                     securityContext:
                       privileged: true
                       runAsUser: 0
                   - name: docker
                     image: docker:20.10.0-dind
                     volumeMounts:
                       - name: certificates
                         mountPath: /etc/ssl/certs/ca-certificates.crt
                         subPath: ca-certificates.crt
                     args:
                       - "--registry-mirror=https://docker.example.org"
                       - "--registry-mirror=http://nexus-sonatype-nexus.nexus:5001"
                       - "--insecure-registry=http://nexus-sonatype-nexus.nexus:5001"
                       - "--debug"
                     securityContext:
                       privileged: true
               '''.stripIndent()
           }
       }
       stages {
           stage('Jenkins: Perform in agents') {
               steps {
                   git credentialsId: 'gerrit',
                       url: 'ssh://jenkins@gerrit.example.org:29418/Sample-Project'
                   dir ('Sample-Project') {
                       container('docker') {
                           sh 'docker login --password=admin123 --username=admin docker.example.org'
                           sh 'DOCKER_BUILDKIT=1 docker build . --progress=plain --tag docker.example.org/sample-project:${BUILD_NUMBER}'
                           sh 'docker push docker.example.org/sample-project:${BUILD_NUMBER}'
                       }
                   }
               }
           }
           stage('Jenkins: Perform in kubectl') {
               steps {
                   container('kubectl') {
                       sh '''\
                             cat <<EOF | kubectl apply -f -
                             apiVersion: v1
                             kind: Pod
                             metadata:
                               name: test-deploy-sample-project-${BUILD_NUMBER}
                               namespace: jenkins
                             spec:
                               containers:
                                 - name: sample-project
                                   image: docker.example.org/sample-project:${BUILD_NUMBER}
                                   command:
                                     - '/bin/bash'
                                     - '-c'
                                     - '--'
                                   args:
                                     - 'sleep infinity'
                             EOF
                             '''.stripIndent()
                     
                   }
               }
           }
       }
}