---
- name: Deploy LDAP
  gather_facts: false
  hosts: all
  vars:
    TEMP_DIRECTORY: "/tmp/jenkins"
    LDAP_SERVER: "ldap://openldap.ldap"
    # GERRIT_SERVER: "gerrit-service-gerrit.gerrit"
  vars_prompt:
    - name: should_clean
      prompt: Should clean before install
      default: false
      private: no
    - name: chown_user
      default: vagrant
    - name: namespace
      prompt: Namespace
      default: "jenkins"
      private: no
    - name: release_name
      prompt: Release name
      default: "jenkins"
      private: no
    - name: domain
      default: "home.arpa"
      prompt: Domain
      private: no
    - name: root_dn
      default: "dc=home,dc=arpa"
      prompt: Root DN
      private: no
    - name: ldap_user
      default: "readonly"
      prompt: Ldap user
      private: no
    - name: ldap_password
      default: "readonly"
      prompt: Ldap user password
      private: true
    - name: cluster_zone
      default: "cluster.internal"
      private: false
    - name: jenkins_ldap_username
      default: "jenkins"
      private: false
    - name: jenkins_ldap_password
      default: "jenkins"
      private: false
  tasks:
    - name: Delete old releases
      command: "helm uninstall --namespace={{ namespace }} {{ release_name }}"
      when: "should_clean|bool"
    - name: Delete namespace
      command: "kubectl delete namespace {{ namespace }}"
      when: "should_clean|bool"
    - name: Create temporary directories
      become: true
      file:
        mode: '0777'
        path: "{{ TEMP_DIRECTORY }}"
        state: directory
    - name: Generate SSH key
      shell: "ssh-keygen {{item}}"
      args:
        executable: /usr/bin/bash
      with_items:
        - "-b 2048 -t rsa -f {{TEMP_DIRECTORY}}/sshkey -q -N '' <<<y 2>&1 >/dev/null"
        - "-y -f {{TEMP_DIRECTORY}}/sshkey > {{TEMP_DIRECTORY}}/sshkey.pub"
    - name: Copy manifests
      become: true
      copy:
        src: ./manifests/
        dest: "{{TEMP_DIRECTORY}}"
        directory_mode: yes
        owner: "{{ chown_user }}"
    - name: Templating pass
      become: true
      template:
        src: "./templates/{{item}}.j2"
        dest: "{{ TEMP_DIRECTORY }}/{{item}}"
        owner: "{{ chown_user }}"
        mode: '0777'
      with_items:
        - values.yaml
        - ldap-password
    - name:
      command: "kubectl create namespace {{namespace}}"
    - name: Create ldap secret
      command: kubectl apply -f {{ TEMP_DIRECTORY }}/ldap-password
    - name: Create gerrit ssh secret
      command: "kubectl create secret generic gerrit-ssh --from-file=ssh-privatekey={{TEMP_DIRECTORY}}/sshkey --namespace={{ namespace }}"
    - name: Add helm repository
      command: helm repo add jenkins https://charts.jenkins.io
    - name: Update helm repositories
      command: helm repo update
    - name: Deploy helm charts
      args:
        executable: /usr/bin/bash
      shell:
        cmd: |
          helm upgrade --install \
            --namespace={{ namespace }} --create-namespace \
            --values={{TEMP_DIRECTORY}}/values.yaml \
            {{ release_name }} \
            jenkins/jenkins
    - name: Create ldap secret
      shell: "kubectl patch StatefulSet/jenkins --namespace=jenkins --patch \"$(cat {{TEMP_DIRECTORY}}/{{item}})\""
      with_items:
        - gerrit-ssh.patch
        - ldap-password.patch

      # Gerrit
    - name: Create jenkins basicauth
      command: "printf 'Authorization: Basic {{ (jenkins_ldap_username + jenkins_ldap_password) | string | b64encode }}'"
      register: basic_auth
    - name: Get public key
      command: "cat {{TEMP_DIRECTORY}}/sshkey.pub"
      register: sshkey_pub
    - name: Get gerrit server
      command: "kubectl get service --namespace=gerrit gerrit-gerrit-service --output=jsonpath='{.status.loadBalancer.ingress[0].ip}'"
      register: gerrit_server
      # FIXME: Not working
      # FIXME: Wait for gerrit
    - name: Act on gerrit
      command: "curl --request POST --show-error --header 'Authorization: Basic {{basic_auth.stdout}}' --header 'Conent-Type: {{item.header}}' --data '{{item.data}}' {{gerrit_server.stdout}}/{{item.url}}"
      with_items:
        - header: application:x-www-form-urlencoded
          data: username={{jenkins_ldap_username}}&password={{jenkins_ldap_password}}
          url: login
        - header: text/plain
          data: "{{sshkey_pub.stdout}}"
          url: a/accounts/self/sshkeys

    - name: Clean temp path
      become: true
      file:
        state: absent
        path: "{{ TEMP_DIRECTORY }}"
