---
- name: Deploy monitoring
  gather_facts: false
  hosts: all
  vars_prompt:
    - name: namespace
      default: monitoring
      private: false
    - name: delete_namespace
      default: false
      private: false
    - name: domain
      default: "example.org"
      prompt: Domain
      private: no
  vars:
    debug: true
    temp_path: /tmp/grafana
  tasks:
    - name: "Delete {{ namespace }} namespace"
      command: "kubectl delete namespace {{ namespace }}"
      when: "delete_namespace|bool"
    - name: Add helm repositories
      command: helm repo add {{ item.name }} {{ item.url }}
      with_items:
        - name: grafana
          url: https://grafana.github.io/helm-charts
        - name: loki
          url: https://grafana.github.io/loki/charts
        - name: prometheus-community
          url: https://prometheus-community.github.io/helm-charts
    - name: Update helm repositories
      command: helm repo update
    - name: Create temporary directory
      become: true
      file:
        path: "{{ temp_path }}"
        state: directory
        mode: 0777
    - name: Copy manifests
      become: true
      copy:
        src: ./{{item}}/
        dest: "{{ temp_path }}/{{ item }}"
        directory_mode: yes
        mode: 0777
        owner: vagrant
      with_items:
        - grafana
        - loki
        - prometheus
        - promtail
    - name: "FIXME: Set proper mode"
      become: true
      shell:
        cmd: chmod 0777 -R {{ temp_path }}
    - name: Install dashboard manifest
      shell:
        cmd: |
          helm upgrade --install \
            --create-namespace --namespace={{ namespace }} \
            --values={{temp_path}}/{{item.release_name}}/values.yaml \
            {{ item.release_name }} \
            {{ item.repository }}
      with_items:
        - release_name: grafana
          repository: grafana/grafana
        - release_name: loki
          repository: loki/loki
        - release_name: prometheus
          repository: prometheus-community/prometheus
        - release_name: promtail
          repository: loki/promtail
    - name: Create ingress
      shell:
        cmd: |
          cat <<EOF | kubectl apply -f -
          apiVersion: networking.k8s.io/v1beta1
          kind: Ingress
          metadata:
            name: nginx
            namespace: {{ namespace }}
            annotations:
              kubernetes.io/ingress.class: "nginx"
          spec:
            rules:
            - host: grafana.{{ domain }}
              http:
                paths:
                - backend:
                    serviceName: grafana
                    servicePort: 80
            - host: prometheus.{{ domain }}
              http:
                paths:
                - backend:
                    serviceName: prometheus-server
                    servicePort: 80
          EOF
    # - name: Password to grafana
    #   shell:
    #     cmd: |
    #       kubectl get secret --namespace {{namespace}} grafana -o jsonpath="{.data.admin-password}" | base64 --decode
    #   register: grafana_password
    #   when: debug|bool
    # - name: Show debug info
    #   when: debug|bool
    #   debug:
    #     msg: "{{grafana_password.stdout}}"
