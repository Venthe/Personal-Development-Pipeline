---
- name: Install and configure prerequisites for containerd CRI
  gather_facts: false
  become: true
  hosts: all
  vars_prompt:
    - name: chown_user
      default: vagrant
      private: false
  tasks:
    - name: Add kernel modules required by CRI to system.d
      copy:
        mode: '0644'
        owner: 'root'
        dest: "/etc/modules-load.d/containerd.conf"
        content: |
          overlay
          br_netfilter
      notify: Restart system.d kernel modules
    # As a requirement for your Linux Node's iptables to
    # correctly see bridged traffic
    - name: Set required CRI settings
      copy:
        mode: '0644'
        owner: 'root'
        dest: "/etc/sysctl.d/99-kubernetes-cri.conf"
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-ip6tables = 1
      notify: reload systemd
  handlers:
    - name: Restart system.d kernel modules
      service:
        name: systemd-modules-load
        state: restarted
      listen: reload systemd
    # VERIFY: This potentially does not work, next handler works for sure
    - name: Reload system.d kernel parameters
      systemd:
        daemon_reload: true
      listen: reload systemd
    - name: Reload all values from all system directories
      command: sysctl --system
      listen: reload systemd
- name: Install containerd CRI
  gather_facts: false
  become: true
  hosts: all
  vars_prompt:
    - name: containerd_version
      default: 1.4.3
      private: false
  tasks:
    # Set up the repository
    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: true
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
    - name: Add an apt signing key for Docker repository
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    # TODO: From 'gather facts' step
    - name: Get system version
      command: lsb_release -cs
      register: release_name
    - name: Add apt repository for Docker
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ release_name.stdout }} stable"
        state: present
        filename: docker
    - name: Install containerd
      apt:
        name: "containerd.io={{ containerd_version }}"
        state: present
        update_cache: true
    - name: Create directory for containerd configuration
      file:
        mode: '0755'
        owner: 'root'
        path: /etc/containerd/
        state: directory
    # TODO: Configure this step 'ansible' way
    - name: Configure containerd
      command: containerd config default > /etc/containerd/config.toml
    - name: Update containerd with systemd cgroup
      blockinfile:
        dest: /etc/containerd/config.toml
        block: |
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
            SystemdCgroup = true
          [plugin."io.containerd.grpc.v1.cri".registry.mirrors."docker.home.arpa"]
            endpoint = ["https://docker.home.arpa"]
        owner: '{{ chown_user }}'
      notify: Restart containerd
    - name: Configure crictl to use containerd
      copy:
        mode: '0644'
        owner: 'root'
        dest: "/etc/crictl.yaml"
        content: |
          runtime-endpoint: unix:///var/run/containerd/containerd.sock
          image-endpoint: unix:///var/run/containerd/containerd.sock
          timeout: 10
          debug: false
      notify: Restart containerd
    - name: Enable CRI in containerd
      replace:
        path: /etc/containerd/config.toml
        regexp: 'disabled_plugins = \["cri"\]'
        replace: '# disabled_plugins = ["cri"]'
      notify: Restart containerd

  handlers:
    - name: Restart containerd
      service:
        name: containerd
        state: restarted
...
